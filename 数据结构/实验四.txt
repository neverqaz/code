实验四

#include <iostream.h>
#include <stdlib.h>
#include <string.h>
typedef char ZF[20];
template <class A1,class A2,class A3> class List;	            //复合类定义
 template <class A1,class A2,class A3> class ListNode {	        //链表结点类	
 friend class List<A1,A2,A3>;	        //链表类为其友元类
 private:
     A1 num;
     A2 sc1;
	 A3 sc2;
	 ZF name;//结点数据, 整型	
     ListNode<A1,A2,A3> *next;   
  		
 };
 template <class A1,class A2,class A3> class List{	                  //链表类		
 public:
      //链表公共操作
	 List(){L=NULL;}
	 int cre(int n);
	 int Ins(int i,A1 e1,ZF e4,A2 e2,A3 e3);
	 int Delete(int i,A1 &e1,ZF &e4,A2 &e2,A3 &e3);
	 void prnl();
 private:
     ListNode<A1,A2,A3> *L;    //表头和表尾指针
 };
 template <class A1,class A2,class A3> int List<A1,A2,A3>::cre(int n)
 { 
  ListNode<A1,A2,A3>  *p,*r;
   int i;
   p=new ListNode<A1,A2,A3>;
   L=p;r=p;p->next=NULL;
   for(i=n;i>0;--i){ 
	 p=new ListNode<A1,A2,A3>;
	 cin>>p->num>>p->name>>p->sc1>>p->sc2;
     p->next=NULL;r->next=p;
	 r=p;
	  }
   return 1;
 }
 
template <class A1,class A2,class A3> void List<A1,A2,A3>::prnl( )
{	 
	ListNode<A1,A2,A3>  *q;
	q=L->next;
   while(q!=NULL){
	cout<<q->num<<" "<<q->name<<" "<<q->sc1<<" "<<q->sc2<<endl;
    q=q->next;}
   cout<<endl;
}
 template <class A1,class A2,class A3>int List<A1,A2,A3>::Ins(int i, A1 e1,ZF e4,A2 e2,A3 e3)
 {int j;
  ListNode<A1,A2,A3>  *y,*z;
  
	  y=L;j=0;
      while(y!=NULL && j<i-1){
	    y=y->next;
        ++j;
	  }
      if(y==NULL || j>i-1) return 0;
      z=new ListNode<A1,A2,A3>;
      if(z==NULL) exit(0);
      z->num=e1;z->sc1=e2;z->sc2=e3; strcpy(z->name,e4);
      z->next=y->next;
      y->next=z;
      return 1;
}
  template <class A1,class A2,class A3> int List<A1,A2,A3>::Delete(int i,A1 &e1,ZF &e4,A2 &e2,A3 &e3)
  {
   ListNode<A1,A2,A3>  *p,*q;
   int j;
   
	     p=L;  j=0;
	     while (p->next && j<i-1)
		 {p=p->next;  ++j;}
		 if (!(p->next) || j>i-1) return 0;
		 q=p->next;  p->next=q->next;
         e1=q->num; e2=q->sc1;e3=q->sc2; strcpy(e4,q->name);
		 delete  q;
		 return 1;
  }

void main()
{
 List <int,int,int> K;
  
 int n,j1,j2;
 int x1,y1,x2,y2,z1,z2;
 ZF h1,h2;
 cout<<"请输入学生（结点）人数与各学生情况（元素）"<<endl;
 cin>>n;
 K.cre(n);
 K.prnl();
 cout<<"请输入插入位置、插入元素"<<endl;
 cin>>j1>>x1>>h1>>y1>>z1;
 K.Ins(j1,x1,h1,y1,z1);
 K.prnl();
 cout<<"请输入删除位置"<<endl;
 cin>>j2;
 K.Delete(j2,x2,h2,y2,z2);
 K.prnl();
 cout<<"被删除元素的学号，姓名，成绩1，成绩2为："<<endl;
 cout<<x2<<""<<h2<<" "<<y2<<" "<<z2<<endl;
}
